using Domain0.Desktop.Views;
using MahApps.Metro.Controls;
using MahApps.Metro.IconPacks;

ViewUserControl "Domain0.Desktop.Views.ManageUsersView" {

  Grid
  {
    Grid 
    {
      #TwoRows("Auto")
      @ManageButtons()
      {
        Grid.Row: 0
      }
      @ManageDataGrid 
      {
        Grid.Row: 1
        combine Columns: [
          DataGridTextColumn
          {
            Header: "Name"
            Binding: bind Name
            Width: Auto
          }
          DataGridTextColumn
          {
            Header: "Phone"
            Binding: bind Phone
            Width: Auto
          }
          DataGridTextColumn
          {
            Header: "Email"
            Binding: bind Email
            Width: Auto
          }
          DataGridTextColumn
          {
            Header: "Description"
            Binding: bind Description
            Width: Auto
          }
        ]
      }
    }

    FlyoutsControl
    {

      @FlyoutCreate("Add User")
      {
        Grid
        {
          MetroTabControl 
          {
            TabControlHelper.Underlined: TabPanel
            TabStripPlacement: Top
            MetroTabItem 
            {
              ControlsHelper.HeaderFontSize: 18
              Header: "Phone"
      
              StackPanel
              {
                TextBox
                {
                  Margin: "5 5 5 0"
                  TextBoxHelper.Watermark: "Phone"
                  Text: bind Phone
                }
                TextBox 
                {
                  Margin: "5 5 5 0"
                  TextBoxHelper.Watermark: "Name"
                  Text: bind Name
                }
                CheckBox "CheckBox_BlockSmsSend"
                {
                  Margin: "5 15 5 5"
                  IsChecked: bind BlockSmsSend
                  "Block Sms Send"
                }
                StackPanel
                {
                  Visibility: bind BlockSmsSend convert (bool val) => val ? Visibility.Collapsed : Visibility.Visible
                  TextBox 
                  {
                    Margin: "5 5 5 0"
                    TextBoxHelper.Watermark: "Custom Sms Template"
                    Text: bind CustomSmsTemplate
                    TextWrapping: Wrap
                  }
                }
                @CreateButton(bind ForceCreateUserCommand){}
              }
            }
            MetroTabItem 
            {
              Header: "Email"
              ControlsHelper.HeaderFontSize: 18
      
              StackPanel
              {
                TextBox
                {
                  Margin: "5 5 5 0"
                  TextBoxHelper.Watermark: "Email"
                  Text: bind Email
                }
                TextBox 
                {
                  Margin: "5 5 5 0"
                  TextBoxHelper.Watermark: "Name"
                  Text: bind Name
                }
                CheckBox
                {
                  Margin: "5 15 5 5"
                  IsChecked: bind BlockEmailSend
                  "Block Email Send"
                }
                StackPanel
                {
                  Visibility: bind BlockEmailSend convert (bool val) => val ? Visibility.Collapsed : Visibility.Visible
                  TextBox 
                  {
                    Margin: "5 5 5 0"
                    TextBoxHelper.Watermark: "Custom Email Subject Template"
                    Text: bind CustomEmailSubjectTemplate
                    TextWrapping: Wrap
                  }
                  TextBox 
                  {
                    Margin: "5 5 5 0"
                    TextBoxHelper.Watermark: "Custom Email Template"
                    Text: bind CustomEmailTemplate
                    TextWrapping: Wrap
                  }
                }
                @CreateButton(bind ForceCreateUserEmailCommand){}
              }
            }
          }
        }
      }
  
      @FlyoutEdit() 
      {
        StackPanel
        {
          @EditTextBox("Name")
          {
            Text: bind EditViewModel.Name
          }
          @EditTextBox("Phone")
          {
            Text: bind EditViewModel.Phone
          }
          @EditTextBox("Email")
          {
            Text: bind EditViewModel.Email
          }
          @EditTextBoxWrap("Description")
          {
            Text: bind EditViewModel.Description
          }
          @EditButton() {}
        }
      }
    }
  }

}