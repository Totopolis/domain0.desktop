using MahApps.Metro.Controls;
using MahApps.Metro.Controls.Dialogs;

CustomDialog "Domain0.Desktop.Views.Dialogs.ForceResetPasswordDialog" {
  Grid {
    Margin: "0 10 0 0"
    #FourRows("Auto", "Auto", "Auto", "Auto")

    TextBlock
    { 
      Grid.Row: 0
      Margin: "0 5 0 0"
      Text: "New password will be sent to the User"
    }
    ComboBox
    {
      Grid.Row: 1
      Margin: "0 5 0 0"
      TextBoxHelper.Watermark: "User Locale"
      TextBoxHelper.UseFloatingWatermark: true
      ItemsSource: bind Locales from $ancestor<ForceResetPasswordDialog> set [ UpdateSourceTrigger: PropertyChanged ]
      SelectedItem: bind Locale from $ancestor<ForceResetPasswordDialog> set [ UpdateSourceTrigger: PropertyChanged ]
    }
    ComboBox
    {
      Grid.Row: 2
      Margin: "0 5 0 0"
      TextBoxHelper.Watermark: "Reset By"
      TextBoxHelper.UseFloatingWatermark: true
      ItemsSource: bind ResetWays from $ancestor<ForceResetPasswordDialog> set [ UpdateSourceTrigger: PropertyChanged ]
      SelectedItem: bind ResetWay from $ancestor<ForceResetPasswordDialog> set [ UpdateSourceTrigger: PropertyChanged ]
      DisplayMemberPath: "Name"
      SelectedIndex: 0
    }
    StackPanel {
      Grid.Row: 3
      Height: 85
      HorizontalAlignment: Right
      Orientation: Horizontal
      Button "PART_AffirmativeButton" {
        Height: 35
        MinWidth: 80
        Margin: "0 0 5 0"
        Content: bind AffirmativeButtonText from $ancestor<ForceResetPasswordDialog> set [ UpdateSourceTrigger: PropertyChanged ]
        Style: resource dyn "AccentedDialogSquareButton"
      }
      Button "PART_NegativeButton" {
        Height: 35
        MinWidth: 80
        Margin: "5 0 5 0"
        Content: bind NegativeButtonText from $ancestor<ForceResetPasswordDialog> set [ UpdateSourceTrigger: PropertyChanged ]
      }
    }
  }
}


